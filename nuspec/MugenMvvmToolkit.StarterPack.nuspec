<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>MugenMvvmToolkit.StarterPack</id>
    <version>6.5.0</version>
    <title>MugenMvvmToolkit - Starter Pack</title>
    <authors>Vyacheslav Volkov</authors>
    <description>
      This package contains the 'Getting Started' assemblies for UWP, Android, iOS platforms.
      Mugen MVVM Toolkit makes it easier to develop cross-platform application using the Model-View-ViewModel design pattern. 
	  The Mugen MVVM Toolkit makes extensive use of Net Standard Library to provide maintainable cross platform C# native applications. 
	  The Mugen MVVM Toolkit provides a cross-platform MVVM development framework built on top of:
      - WinForms
      - WPF
      - Xamarin.Android
      - Xamarin.iOS
      - Xamarin.Forms
      - UWP
      The MVVM framework includes the following features that differs this project from other frameworks:
      - Deep integration with each platform.
      - Supports state preservation and restoration for mobile platforms.
      - Full Fragment support for Android, you do not need to worry about activity, fragments, sub-fragments or their state all this makes the framework.
      - Solves the nested user controls problem in MVVM, all view models are dynamically created by you, using the GetViewModel method and you do not need to use the ViewModelLocator.
      - Supports all kinds of navigation like modal window, page navigation, tab navigation, back stack fragment navigation for android. You can also easily add a new kind of navigation.
      - Navigation system works with view models and allows to expect the completion of the operation. You can pass any parameters between view models.
      - Good design mode support, for xaml platforms supports the creation of design view model with any constructor parameters.
      - Supports bindings on all platforms, all of the native binding features available for WPF platform available on all platforms and even more.
      - Binding supports C# language expressions like Linq, Extension methods, method call, ternary operator (?:), coalescing operator (??), etc.
      - Supports subscription to any control event.
      - Built-in support for validation.
      - You can easily write their own extensions for bindings.
      - Supports attached members (properties, events, methods), you can extend any object as you want.
      - Special editor for WinForms, you do not need to write code to create bindings.
      - Binding parser builds syntax tree that allows you to easily change or extend the bindings, without manipulation of the raw text.
      - Binding supports fluent syntax.
      - Excellent binding performance.
    </description>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <iconUrl>https://raw.githubusercontent.com/MugenMvvmToolkit/MugenMvvmToolkit/master/logo128_128.png</iconUrl>
    <projectUrl>https://github.com/MugenMvvmToolkit/MugenMvvmToolkit</projectUrl>
    <licenseUrl>http://opensource.org/licenses/MS-PL</licenseUrl>
    <tags>mugen mvvm toolkit binding wpf winforms android uwp cross platform ios xamarin forms xamforms</tags>
    <dependencies>
      <group>
        <dependency id="MugenMvvmToolkit" version="6.5.0" />
      </group>
      <group targetFramework="Xamarin.iOS">
        <dependency id="MugenMvvmToolkit.iOS" version="6.5.0" />		
      </group>
	  <group targetFramework="MonoAndroid10">
        <dependency id="MugenMvvmToolkit.Android" version="6.5.0" />
      </group>
    </dependencies>
  </metadata>
  <files>
    <!-- NetStandard -->
    <file src="CoreContent\MainViewModel.cs.pp" target="content\netstandard1.0\ViewModels\MainViewModel.cs.pp" />
    <file src="CoreContent\App.cs.pp" target="content\netstandard1.0\App.cs.pp" />

    <!-- Android -->
    <file src="AndroidContent\Setup.cs.pp" target="content\MonoAndroid10\Setup.cs.pp" />
    <file src="AndroidContent\SplashScreenActivity.cs.pp" target="content\MonoAndroid10\Views\SplashScreenActivity.cs.pp" />
    <file src="AndroidContent\MainView.cs.pp" target="content\MonoAndroid10\Views\MainView.cs.pp" />
    <file src="AndroidContent\Main.axml.pp" target="content\MonoAndroid10\Resources\layout\Main.axml.pp" />
    <file src="AndroidContent\Readme.txt" target="content\MonoAndroid10\_MugenMvvmToolkitReadme.txt" />

    <!-- Touch -->   
    <file src="TouchContent\Setup.cs.pp" target="content\Xamarin.iOS10\AppDelegate.cs.pp" />
    <file src="TouchContent\MainView.cs.pp" target="content\Xamarin.iOS10\Views\MainView.cs.pp" />
    <file src="TouchContent\Readme.txt" target="content\Xamarin.iOS10\_MugenMvvmToolkitReadme.txt" />
  </files>
</package>